<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Baseline extends \App\Entity\Baseline implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'Trains', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'ConfigLogiciel', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'VersionLogiciel', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'Date', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'Status', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'Original', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'ERTMS'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'Trains', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'ConfigLogiciel', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'VersionLogiciel', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'Date', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'Status', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'Original', '' . "\0" . 'App\\Entity\\Baseline' . "\0" . 'ERTMS'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Baseline $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\Baseline
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getTrains(): ?\App\Entity\Trains
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTrains', []);

        return parent::getTrains();
    }

    /**
     * {@inheritDoc}
     */
    public function setTrains(?\App\Entity\Trains $Trains): \App\Entity\Baseline
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTrains', [$Trains]);

        return parent::setTrains($Trains);
    }

    /**
     * {@inheritDoc}
     */
    public function getConfigLogiciel(): ?\App\Entity\ConfigLogiciel
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConfigLogiciel', []);

        return parent::getConfigLogiciel();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfigLogiciel(?\App\Entity\ConfigLogiciel $ConfigLogiciel): \App\Entity\Baseline
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfigLogiciel', [$ConfigLogiciel]);

        return parent::setConfigLogiciel($ConfigLogiciel);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersionLogiciel(): ?\App\Entity\VersionLogiciel
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersionLogiciel', []);

        return parent::getVersionLogiciel();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersionLogiciel(?\App\Entity\VersionLogiciel $VersionLogiciel): \App\Entity\Baseline
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersionLogiciel', [$VersionLogiciel]);

        return parent::setVersionLogiciel($VersionLogiciel);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate(\DateTimeInterface $Date): \App\Entity\Baseline
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$Date]);

        return parent::setDate($Date);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(bool $Status): \App\Entity\Baseline
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$Status]);

        return parent::setStatus($Status);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginal(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginal', []);

        return parent::getOriginal();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginal(bool $Original): \App\Entity\Baseline
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginal', [$Original]);

        return parent::setOriginal($Original);
    }

    /**
     * {@inheritDoc}
     */
    public function getERTMS(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getERTMS', []);

        return parent::getERTMS();
    }

    /**
     * {@inheritDoc}
     */
    public function addERTM(\App\Entity\AssociationEquiptERTMS $eRTM): \App\Entity\Baseline
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addERTM', [$eRTM]);

        return parent::addERTM($eRTM);
    }

    /**
     * {@inheritDoc}
     */
    public function removeERTM(\App\Entity\AssociationEquiptERTMS $eRTM): \App\Entity\Baseline
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeERTM', [$eRTM]);

        return parent::removeERTM($eRTM);
    }

}
